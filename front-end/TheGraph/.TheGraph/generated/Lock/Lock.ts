// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class InfoAdded extends ethereum.Event {
  get params(): InfoAdded__Params {
    return new InfoAdded__Params(this);
  }
}

export class InfoAdded__Params {
  _event: InfoAdded;

  constructor(event: InfoAdded) {
    this._event = event;
  }

  get param0(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class Lock extends ethereum.SmartContract {
  static bind(address: Address): Lock {
    return new Lock("Lock", address);
  }
}

export class AddInfoCall extends ethereum.Call {
  get inputs(): AddInfoCall__Inputs {
    return new AddInfoCall__Inputs(this);
  }

  get outputs(): AddInfoCall__Outputs {
    return new AddInfoCall__Outputs(this);
  }
}

export class AddInfoCall__Inputs {
  _call: AddInfoCall;

  constructor(call: AddInfoCall) {
    this._call = call;
  }

  get _age(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddInfoCall__Outputs {
  _call: AddInfoCall;

  constructor(call: AddInfoCall) {
    this._call = call;
  }
}
